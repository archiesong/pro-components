"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const u=require("vue"),t=require("ant-design-vue");function V(r){var a;const e=(a=Object.prototype.toString.call(r).match(/^\[object (.*)\]$/))==null?void 0:a[1].toLowerCase();return e==="string"&&typeof r=="object"?"object":r===null?"null":r===void 0?"undefined":e}const i=({color:r,...e},{slots:a})=>{var n;return u.createVNode(t.Badge,u.mergeProps(e,{color:r,text:(n=a.default)==null?void 0:n.call(a)}),null)},f=r=>V(r)==="map"?r:new Map(Object.entries(r||{})),N={Success:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"success",text:(a=e.default)==null?void 0:a.call(e)}),null)},Error:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"error",text:(a=e.default)==null?void 0:a.call(e)}),null)},Default:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"default",text:(a=e.default)==null?void 0:a.call(e)}),null)},Processing:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"processing",text:(a=e.default)==null?void 0:a.call(e)}),null)},Warning:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"warning",text:(a=e.default)==null?void 0:a.call(e)}),null)},success:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"success",text:(a=e.default)==null?void 0:a.call(e)}),null)},error:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"error",text:(a=e.default)==null?void 0:a.call(e)}),null)},default:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"default",text:(a=e.default)==null?void 0:a.call(e)}),null)},processing:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"processing",text:(a=e.default)==null?void 0:a.call(e)}),null)},warning:(r,{slots:e})=>{var a;return u.createVNode(t.Badge,u.mergeProps(r,{status:"warning",text:(a=e.default)==null?void 0:a.call(e)}),null)}},o=(r,e,a)=>{if(Array.isArray(r))return u.createVNode(t.Space,{key:a,size:2,wrap:!0},{default:()=>[r.map((l,m)=>o(l,e,m))],split:","});const n=f(e);if(!n.has(r)&&!n.has(`${r}`))return(r==null?void 0:r.label)||r;const d=n.get(r)||n.get(`${r}`);if(!d)return u.createVNode(u.Fragment,{key:a},[(r==null?void 0:r.label)||r]);const{status:p,color:c}=d,g=N[p||"Init"];return g?u.createVNode(g,{key:a},{default:()=>[d.text]}):c?u.createVNode(i,{key:a,color:c},{default:()=>[d.text]}):u.createVNode(u.Fragment,{key:a},[d.text||d])};exports.ProFieldBadgeColor=i;exports.default=o;exports.objectToMap=f;
